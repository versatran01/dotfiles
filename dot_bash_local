# improve history, ignore meaningless command
export HISTIGNORE="&:ls:cd:[bf]g:exit:?:??:??:rm*"
export HISTSIZE=100000
export HISTFILESIZE=200000
# avoid duplicates..
export HISTCONTROL=ignoredups:erasedups
export PROMPT_COMMAND="history -a;$PROMPT_COMMAND"

# More shopt # Autocorrect fudged paths in cd calls shopt -s cdspell
# Update the hash table properly
shopt -s checkhash
# Update columns and rows if window size changes
shopt -s checkwinsize
# Put multi-line commands onto one line of history
shopt -s cmdhist
# Include dotfiles in pattern matching
shopt -s dotglob
# Enable advanced pattern matching
shopt -s extglob
# Append rather than overwrite Bash history
shopt -s histappend
# Don't use Bash's builtin host completion
shopt -u hostcomplete
# Ignore me if I try to complete an empty line
shopt -s no_empty_cmd_completion
# Use programmable completion, if available
shopt -s progcomp
# Warn me if I try to shift when there's nothing there
shopt -s shift_verbose

# 256 for terminal
export TERM=xterm-256color

# source inputrc
export INPUTRC=~/.inputrc

# Less Colors for Man Pages
export LESS_TERMCAP_mb=$'\e[01;31m' # begin blinking
export LESS_TERMCAP_md=$'\e[01;32m' # begin bold
export LESS_TERMCAP_so=$'\e[01;44m' # begin standout-mode - info box
export LESS_TERMCAP_us=$'\e[01;33m' # begin underline
export LESS_TERMCAP_me=$'\e[0m'     # end mode
export LESS_TERMCAP_se=$'\e[0m'     # end standout-mode
export LESS_TERMCAP_ue=$'\e[0m'     # end underline
export GROFF_NO_SGR=1               # for konsole and gnome-terminal

# autojump
if [ -f /usr/share/autojump/autojump.sh ]; then
    source /usr/share/autojump/autojump.sh
else
    [[ -s /etc/profile.d/autojump.bash ]] && . /etc/profile.d/autojump.bash
fi

# starship
export STARSHIP_CONFIG=~/config/starship.toml
eval "$(starship init bash)"

eval "$(zoxide init bash)"
alias cd='z'
alias cd..='cd ..'
alias cd...='cd ../..'
alias cd....='cd ../../..'
alias cd.....='cd ../../../..'
alias cd......='cd ../../../../..'

eval "$(atuin init bash --disable-up-arrow --disable-ctrl-r)"

export FZF_DEFAULT_COMMAND='fd --strip-cwd-prefix --no-ignore'
export FZF_CTRL_T_COMMAND="$FZF_DEFAULT_COMMAND"

export GTEST_COLOR=1

if [ -f ~/.local/share/blesh/ble.sh ]; then
  source ~/.local/share/blesh/ble.sh
  ble-face auto_complete='fg=242,bg=235'
fi

# Get my ip address
function myip() {
    local myip=$(w3m -dump http://checkip.dyndns.org:8245/)
    echo "${myip}"
}

# Easy extract
function extract() {
    if [ -f $1 ]; then
        case $1 in
        *.tar.bz2) tar xvjf $1 ;;
        *.tar.gz) tar xvzf $1 ;;
        *.bz2) bunzip2 $1 ;;
        *.rar) rar x $1 ;;
        *.gz) gunzip $1 ;;
        *.tar) tar xvf $1 ;;
        *.tbz2) tar xvjf $1 ;;
        *.tgz) tar xvzf $1 ;;
        *.apk) unzip $1 ;;
        *.epub) unzip $1 ;;
        *.xpi) unzip $1 ;;
        *.zip) unzip $1 ;;
        *.war) unzip $1 ;;
        *.jar) unzip $1 ;;
        *.Z) uncompress $1 ;;
        *.7z) 7z x $1 ;;
        *) echo "don't know how to extract '$1'..." ;;
        esac
    else
        echo "'$1' is not a valid file!"
    fi
}

export CONDA_TOP_DIR="$HOME/miniforge3"

if [ -z $CONDA_TOP_DIR ]; then
    echo "sc(): Please set CONDA_TOP_DIR to the conda installation directory for this script to work."
fi

_conda_switch() {
    local cur CONDA_ENVS
    COMPREPLY=()
    cur="${COMP_WORDS[COMP_CWORD]}"
    CONDA_ENVS=$(find $CONDA_TOP_DIR/envs -mindepth 1 -maxdepth 1 -type d | grep -v "^.$" | sed 's/.*\///')
    COMPREPLY=($(compgen -W "${CONDA_ENVS}" -- ${cur}))
    return 0
}

# conda switch
sc() {
    if [ $# -eq 1 ]; then
        echo "mamba activate $1"
        mamba activate $1
    else
        echo "mamba activate base"
        mamba activate base
    fi
}

complete -F _conda_switch sc
